/**
* @license
*
* Regression.JS - Regression functions for javascript
* http://tom-alexander.github.com/regression-js/
*
* copyright(c) 2013 Tom Alexander
* Licensed under the MIT license.
*
**/
!function(a){"use strict";var b=function(a,b){for(var c=0,d=0,e=0,f=0,g=a.length,h=0;h<g;h++)c+=a[h][1];f=c/g;for(var h=0;h<g;h++)e+=Math.pow(a[h][1]-f,2),d+=Math.pow(a[h][1]-b[h][1],2);return 1-d/e},c=function(a,b){var c=0,d=0,e=0,f=0,g=0,h=a.length-1,i=new Array(b);for(c=0;c<h;c++){for(f=c,d=c+1;d<h;d++)Math.abs(a[c][d])>Math.abs(a[c][f])&&(f=d);for(e=c;e<h+1;e++)g=a[e][c],a[e][c]=a[e][f],a[e][f]=g;for(d=c+1;d<h;d++)for(e=h;e>=c;e--)a[e][d]-=a[e][c]*a[c][d]/a[c][c]}for(d=h-1;d>=0;d--){for(g=0,e=d+1;e<h;e++)g+=a[e][d]*i[e];i[d]=(a[h][d]-g)/a[d][d]}return i},d={linear:function(a){for(var c=[0,0,0,0,0],d=0,e=[];d<a.length;d++)null!==a[d][1]&&(c[0]+=a[d][0],c[1]+=a[d][1],c[2]+=a[d][0]*a[d][0],c[3]+=a[d][0]*a[d][1],c[4]+=a[d][1]*a[d][1]);for(var f=(d*c[3]-c[0]*c[1])/(d*c[2]-c[0]*c[0]),g=c[1]/d-f*c[0]/d,h=(d*c[3]-c[0]*c[1])/Math.sqrt((d*c[2]-c[0]*c[0])*(d*c[4]-c[1]*c[1])),i=Math.pow(h,2),j=0,k=a.length;j<k;j++){var l=[a[j][0],a[j][0]*f+g];e.push(l)}var m=g<0?"-":"+",n="y = "+Math.round(1e4*f)/1e4+"x "+m+" "+Math.abs(Math.round(1e4*g)/1e4);return{r2:b(a,e),equation:[f,g],points:e,string:n,correlation:h,rSquare:i}},linearThroughOrigin:function(a){for(var b=[0,0],c=0,d=[];c<a.length;c++)null!==a[c][1]&&(b[0]+=a[c][0]*a[c][0],//sumSqX
b[1]+=a[c][0]*a[c][1]);for(var e=b[1]/b[0],f=0,g=a.length;f<g;f++){var h=[a[f][0],a[f][0]*e];d.push(h)}var i="y = "+Math.round(1e4*e)/1e4+"x";return{equation:[e],points:d,string:i}},exponential:function(a){var c=[0,0,0,0,0,0],d=0,e=[];for(j=a.length;d<j;d++)null!==a[d][1]&&(c[0]+=a[d][0],c[1]+=a[d][1],c[2]+=a[d][0]*a[d][0]*a[d][1],c[3]+=a[d][1]*Math.log(a[d][1]),c[4]+=a[d][0]*a[d][1]*Math.log(a[d][1]),c[5]+=a[d][0]*a[d][1]);for(var f=c[1]*c[2]-c[5]*c[5],g=Math.pow(Math.E,(c[2]*c[3]-c[5]*c[4])/f),h=(c[1]*c[4]-c[5]*c[3])/f,i=0,j=a.length;i<j;i++){var k=[a[i][0],g*Math.pow(Math.E,h*a[i][0])];e.push(k)}var l="y = "+Math.round(1e4*g)/1e4+"e^("+Math.round(1e4*h)/1e4+"x)";return{r2:b(a,e),equation:[g,h],points:e,string:l}},logarithmic:function(a){var c=[0,0,0,0,0],d=0,e=[];for(k=a.length;d<k;d++)null!==a[d][1]&&(c[0]+=Math.log(a[d][0]),c[1]+=a[d][1]*Math.log(a[d][0]),c[2]+=a[d][1],c[3]+=Math.pow(Math.log(a[d][0]),2),c[4]+=Math.pow(a[d][1],2));for(var f=(d*c[1]-c[2]*c[0])/(d*c[3]-c[0]*c[0]),g=(c[2]-f*c[0])/d,h=(d*c[1]-c[2]*c[0])/Math.sqrt((d*c[3]-c[0]*c[0])*(d*c[4]-c[2]*c[2])),i=Math.pow(h,2),j=0,k=a.length;j<k;j++){var l=[a[j][0],g+f*Math.log(a[j][0])];e.push(l)}var m=g<0?"-":"+",n="y = "+Math.round(1e4*f)/1e4+" ln(x) "+m+" "+Math.abs(Math.round(1e4*g)/1e4);return{r2:b(a,e),equation:[g,f],points:e,string:n,rSquare:i}},power:function(a){var c=[0,0,0,0],d=0,e=[];for(i=a.length;d<i;d++)null!==a[d][1]&&(c[0]+=Math.log(a[d][0]),c[1]+=Math.log(a[d][1])*Math.log(a[d][0]),c[2]+=Math.log(a[d][1]),c[3]+=Math.pow(Math.log(a[d][0]),2));for(var f=(d*c[1]-c[2]*c[0])/(d*c[3]-c[0]*c[0]),g=Math.pow(Math.E,(c[2]-f*c[0])/d),h=0,i=a.length;h<i;h++){var j=[a[h][0],g*Math.pow(a[h][0],f)];e.push(j)}var k="y = "+Math.round(1e4*g)/1e4+"x^"+Math.round(1e4*f)/1e4;return{r2:b(a,e),equation:[g,f],points:e,string:k}},polynomial:function(a,d){"undefined"==typeof d&&(d=2);for(var e=[],f=[],g=[],h=0,i=0,j=0,k=d+1;j<k;j++){for(var l=0,m=a.length;l<m;l++)null!==a[l][1]&&(h+=Math.pow(a[l][0],j)*a[l][1]);e.push(h),h=0;for(var n=[],o=0;o<k;o++){for(var l=0,m=a.length;l<m;l++)null!==a[l][1]&&(i+=Math.pow(a[l][0],j+o));n.push(i),i=0}f.push(n)}f.push(e);for(var p=c(f,k),j=0,m=a.length;j<m;j++){for(var q=0,r=0;r<p.length;r++)q+=p[r]*Math.pow(a[j][0],r);g.push([a[j][0],q])}for(var s="y = ",j=p.length-1;j>=0;j--)s+=j>1?Math.round(p[j]*Math.pow(10,j))/Math.pow(10,j)+"x^"+j+" + ":1==j?Math.round(1e4*p[j])/1e4+"x + ":Math.round(1e4*p[j])/1e4;return{r2:b(a,g),equation:p,points:g,string:s}},movingAverage:function(a,b){var c=[],d=[];for(var e in a){d.push(a[e]),d.length>b&&d.splice(0,1);var f=0;for(var e in d)f+=d[e];var g=b;d.length<b&&(g=d.length),c.push(f/g)}// removed avg which are same as data passed
return c.splice(0,b-1),c},sigmoid:function(a,b){function c(a,b,c,d,e){for(var f=[],g=0;g<a.length;g++){var h=Math.exp((a[g]-e)/d),i=(b+c*h)/(1+h);f.push(i)}return f}
// straight copy from numeric.js::numeric.linspace():
function d(a,b,c){if("undefined"==typeof c&&(c=Math.max(Math.round(b-a)+1,1)),c<2)return 1===c?[a]:[];var d,e=Array(c);for(c--,d=c;d>=0;d--)e[d]=(d*b+(c-d)*a)/c;return e}for(var e=a.map(function(a){return a[0]}),f=a.map(function(a){return a[1]}),g=99999999,h=0,i=0,j=[],k=Math.min.apply(null,f),l=Math.max.apply(null,f),m=Math.min.apply(null,e),n=Math.max.apply(null,e),o=-1e3;o<=1e3;o+=10)if(0!=o)for(var p=m;p<n;p+=10){var q=c(e,k,l,o,p),r=0;a.forEach(function(a,b,c){r+=Math.pow(q[b]-f[b],2)}),r<g&&(g=r,h=p,i=o)}for(var s=c(e,k,l,i,h),t=0,u=a.length;t<u;t++){var v=[a[t][0],s[t]];j.push(v)}var w="y = ("+k+" + "+l+"*e^((x-"+h+")/"+i+"))/(1+e^((x-"+h+")/"+i+"))";if("object"==typeof b){var x=b.offset,y=d(m-x,n+x,(n-m+2*x)/b.grain),z=c(y,k,l,i,h);return{equation:[k,l,i,h],points:j,string:w,span:{xspan:y,yspan:z}}}return{equation:[k,l,i,h],points:j,string:w}},lastvalue:function(a){for(var c=[],d=null,e=0;e<a.length;e++)a[e][1]?(d=a[e][1],c.push([a[e][0],a[e][1]])):c.push([a[e][0],d]);return{r2:b(a,c),equation:[d],points:c,string:""+d}}},e=function(a,b,c){if("string"==typeof a)return d[a](b,c)};"undefined"!=typeof exports?module.exports=e:a.regression=e}(this);